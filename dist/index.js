var W=Object.defineProperty;var q=Object.getOwnPropertySymbols;var X=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable;var b=(s,r,t)=>r in s?W(s,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[r]=t,D=(s,r)=>{for(var t in r||(r={}))X.call(r,t)&&b(s,t,r[t]);if(q)for(var t of q(r))$.call(r,t)&&b(s,t,r[t]);return s};var _=(s,r,t)=>(b(s,typeof r!="symbol"?r+"":r,t),t),v=(s,r,t)=>{if(!r.has(s))throw TypeError("Cannot "+t)};var g=(s,r,t)=>(v(s,r,"read from private field"),t?t.call(s):r.get(s)),E=(s,r,t)=>{if(r.has(s))throw TypeError("Cannot add the same private member more than once");r instanceof WeakSet?r.add(s):r.set(s,t)},z=(s,r,t,e)=>(v(s,r,"write to private field"),e?e.call(s,t):r.set(s,t),t);var u=(s,r,t)=>(v(s,r,"access private method"),t);var H=new Set(["string","number","boolean","null","undefined","symbol"]),y=s=>isNaN(s)&&typeof s=="number",M=s=>typeof s=="object"&&s!==null&&Array.isArray(s)===!1,w=s=>H.has(typeof s),sr=JSON.stringify,nr=JSON.parse,S=s=>JSON.parse(JSON.stringify(s)),T=(s,r)=>{if(s.length!==r.length)throw new Error("Arrays must be of the same lengths in a logical operation")};var N=()=>{throw new Error("iteratee has to be either of type 'string' or 'function'")};var x=(s,r)=>{[s,r]=[r,s]},B=(s,r,t,e)=>{let n=Array.isArray(s),i=r!==void 0;if(!n&&!i)return t[e](h=>h===s);if(!n&&i)return t[e](h=>r(h,s));if(n&&!i)return T(s,Arr),t[e]((h,o)=>h===s[o]);if(n&&i)return T(s,Arr),t[e]((h,o)=>r(h,s[o]))},j=(s,r,t)=>{if(typeof s=="function")return r();if(typeof s=="string")return t();N()},I=(s,r,t)=>t?Math[r](...s,...t.flat(1/0)):Math[r](...s),k=(s,r,t)=>j(r,()=>Math[t](...s.map(r)),()=>{let i=r.split(".");if(i.length===1)return Math[t](...s.map(o=>o[i[0]]));let h=s.map(o=>i.reduce((a,f)=>a[f],o));return Math[t](...h)}),P=(s,r,t)=>j(r,()=>s.find(i=>r(i)===Math[t](...Arr.map(r))),()=>{let i=r.split(".");return i.length===1?s.find(h=>h[i[0]]===Math[t](...s.map(o=>o[i[0]]))):s.find((h,o)=>res[o]===Math[t](...s.map(a=>i.reduce((f,d)=>f[d],a))))}),L=(s,r,t)=>{let e=t==="+"?0:1;return j(r,()=>{for(let h of s)e=t==="+"?e+r(h):e*r(h);return e},()=>{let h=r.split(".");for(let o of s){let a=o[h[0]];for(let f=1;f<h.length;f++)a=a[h[f]];e=t==="+"?e+a:e*a}return e})};var J=class extends Array{constructor(r){super(0);this.push(...r),Object.freeze(this)}static get[Symbol.species](){return Array}},C=s=>new J(s);var R=s=>{if(s.length<=1)return s;let r=[],t=[],e=[],n=s.pop(),i=s.length;for(let h=0;h<i;h++)s[h]<=n?r.push(s[h]):t.push(s[h]);return e.concat(R(r),n,R(t))},K=(s,r)=>{let t=[];for(;s.length&&r.length;)t.push(s[0]>r[0]?r.shift():s.shift());for(;s.length;)t.push(s.shift());for(;r.length;)t.push(r.shift());return t},V=s=>{if(s.length<2)return s;let r=Math.floor(s.length/2),t=s.slice(0,r),e=s.slice(r,s.length),n=V(t),i=V(e);return K(n,i)},Y=s=>{for(let r=1;r<s.length;r++){let t=r-1,e=s[r];for(;t>=0&&s[t]>e;)s[t+1]=s[t],t--;s[t+1]=e}return s},G=s=>{let r,t=s.length-1,e=s;do{r=!1;for(let n=0;n<t;n++)if(e[n]<e[n+1]){let i=e[n];e[n]=e[n+1],e[n+1]=i,r=!0}t--}while(r);return e},Z=s=>{let r=n=>{let i=0;for(let h of n)i=i<h.toString().length?h.toString().length:i;return i},t=(n,i)=>Math.floor(n/Math.pow(10,i))%10,e=r(s);for(let n=0;n<e;n++){let i=Array.from({length:10},()=>[]);for(let h=0;h<s.length;h++)i[t(s[h],n)].push(s[h]);s=[].concat(...i)}return s},rr=s=>{let r,t=(i,h)=>{let o=2*h+1,a=2*h+2,f=h;o<r&&i[o]>i[f]&&(f=o),a<r&&i[a]>i[f]&&(f=a),f!=h&&(e(i,h,f),t(i,f))},e=(i,h,o)=>{let a=i[h];i[h]=i[o],i[o]=a};return(i=>{r=i.length;let h=Math.floor(r/2);for(let o=h;o>=0;o-=1)t(i,o);for(let o=i.length-1;o>0;o--)e(i,0,o),r--,t(i,0);return i})(s.slice())},F={QuickSort:R,MergeSort:V,InsertionSort:Y,BubbleSort:G,RadixSort:Z,HeapSort:rr};var A,m,l,c,U=class{constructor(r,t){E(this,l);E(this,A,-1);E(this,m,void 0);_(this,"serialize",JSON.stringify);_(this,"clonedeep",S);if(!Array.isArray(r))throw new Error("parameter is not Array");this.initConfig(t),z(this,m,r),this.arr=r.slice()}initConfig(r){!r||(r.serialize&&(this.serialize=r.serialize),r.clonedeep&&(this.clonedeep=r.clonedeep))}get value(){return this.arr}get length(){return this.arr.length}get lastElement(){return this.arr[this.arr.length-1]}concat(...r){return u(this,l,c).call(this,"concat",...r)}copyWithin(r,t,e){return u(this,l,c).call(this,"copyWithin",r,t,e)}entries(){return this.arr.entries()}every(r,t){return this.arr.every(r,t)}fill(r,t,e){return u(this,l,c).call(this,"fill",r,t,e)}filter(r,t){return u(this,l,c).call(this,"filter",r,t)}find(r,t){return this.arr.find(r,t)}findIndex(r,t){return u(this,l,c).call(this,"findIndex",r,t)}flat(r=1){return u(this,l,c).call(this,"flat",r)}flatMap(r,t){return u(this,l,c).call(this,"flatMap",r,t)}forEach(r,t){return u(this,l,c).call(this,"forEach",r,t)}includes(r,t){return u(this,l,c).call(this,"includes",r,t)}indexOf(r,t){return u(this,l,c).call(this,"indexOf",r,t)}join(r){return u(this,l,c).call(this,"join",r)}keys(){return this.arr.keys()}lastIndexOf(r,t){return u(this,l,c).call(this,"lastIndexOf",r,t)}map(r,t){return u(this,l,c).call(this,"map",r,t)}push(...r){return this.arr.push(...r)}pop(){return this.arr.pop()}reduce(r,t){return u(this,l,c).call(this,"reduce",r,t)}reduceRight(r,t){return u(this,l,c).call(this,"reduceRight",r,t)}shift(){return u(this,l,c).call(this,"shift")}slice(r,t){return u(this,l,c).call(this,"slice",r,t)}some(r,t){return u(this,l,c).call(this,"some",r,t)}splice(r,t,...e){return u(this,l,c).call(this,"splice",r,t,...e)}toLocaleString(){return u(this,l,c).call(this,"toLocaleString")}toString(){return u(this,l,c).call(this,"forEach")}unshift(...r){return u(this,l,c).call(this,"unshift",...r)}values(){return this.arr.values()}hasOwnProperty(r){return this.arr.hasOwnProperty(r)}isPrototypeOf(r){return this.arr.isPrototypeOf(r)}propertyIsEnumerable(r){return this.arr.propertyIsEnumerable(r)}count(r){let t=this.arr,e=0;return r===null?t.forEach(n=>{n===null&&(e+=1)}):y(r)?t.forEach(n=>{y(n)&&(e+=1)}):typeof r=="number"||typeof r=="string"?t.forEach(n=>{n===r&&(e+=1)}):t.forEach(n=>{this.serialize(r)===this.serialize(n)&&(e+=1)}),e}chunk(r){if(r<0||!r)throw new Error("size should be defined as a positive value");let t=[],e=this.arr,n=Math.ceil(e.length/r);for(let i=0;i<n;i++)t.push(e.slice(i*r,i*r+r));return this.arr=t,this}clear(){return g(this,m).splice(0),this.arr.splice(0),this}mutate(){return this.arr=g(this,m),this}column(r,t){let e=this.arr;if(typeof r=="function")e=e.map(r);else if(!!t&&typeof t=="string"){let n=t.split(".");e=e.map(i=>n.reduce((h,o)=>h[o],i[r]))}else{if(t)throw new Error("key has to be of type 'string'");e=e.map(n=>n[r])}return this.arr=e,this}isEmpty(){return this.arr.length===0}isUnique(){let r=this.arr;if(r.length!==[...new Set(r)].length)return!1;let t=r.map(e=>typeof e=="object"&&e!==null?this.serialize(e):e);return t.length===[...new Set(t)].length}isEqual(r){return this.serialize(this.arr)===this.serialize(r)}has(r){return w(r)||y(r)?new Set(this.arr).has(r):this.arr.map(t=>this.serialize(t)).includes(this.serialize(r))}hasDuplicates(){return!this.isUnique()}hasArray(){return this.arr.some(r=>Array.isArray(r))}hasObject(){return this.arr.some(M)}hasEmptyArr(){return this.arr.some(r=>Array.isArray(r)&&r.length===0)}hasEmptyObj(){return this.arr.some(r=>M(r)&&Object.keys(r).length===0)}hasNull(){return new Set(this.arr).has(null)}hasUndefined(){return new Set(this.arr).has(void 0)}hasNullish(){let r=new Set(this.arr);return r.has(null)||r.has(void 0)}hasNaN(){return new Set(this.arr).has(NaN)}hasTrue(){return new Set(this.arr).has(!0)}hasFalse(){return new Set(this.arr).has(!1)}hasBoolean(){let r=new Set(this.arr);return r.has(!1)||r.has(!0)}hasAll(r=[]){let t=new Set(this.arr);return r.every(e=>t.has(e))}hasAllTypes(r=[],t){let e=new Set(t);return r.every(n=>e.has(typeof n))}hasNumber(){return this.arr.some(r=>typeof r=="number"&&!isNaN(r))}hasString(){return this.arr.some(r=>typeof r=="string")}hasTruthy(){return this.arr.some(r=>!!r)}hasFalsy(){return this.arr.some(r=>!r)}row(r){return this.arr=this.arr[r],this}at(r){return this.arr=r>=0?this.arr[r]:this.arr[this.arr.length+r],this}findDuplicates(){let r=this.arr.slice().sort(),t=[];for(let e=0;e<r.length-1;e++)r[e+1]==r[e]&&t.push(r[e]);return this.arr=[...new Set(t)],this}findAllOccurences(r,t=e=>e){let e=[];if(y(r)||!w(r)){let i=this.serialize(r);this.arr.map(t).forEach((h,o)=>{this.serialize(h)===i&&e.push(o)})}else this.arr.map(t).forEach((i,h)=>{i===r&&e.push(h)});return this.arr=e,this}getTruthyValues(){return u(this,l,c).call(this,"filter",r=>!!r)}getFalsyValues(){return u(this,l,c).call(this,"filter",r=>!r)}getAllKeys(){return this.arr=Object.keys(this.arr),this}random(){return this.arr[Math.floor(Math.random()*this.arr.length)]}rotate(r=0,t="clockwise"){let e=this.arr;if(r<=0)return e;let n=r%e.length;if(t==="clockwise")e=e.slice(-1*n).concat(e.slice(0,-1*n));else if(t==="counterclockwise")e=e.slice(n).concat(e.slice(0,n));else throw new Error('"direction" prop can only be either "clockwise" or "counterclockwise".');return this.arr=e,this}xsplice(r,t=0,...e){let n=this.arr.slice();return n.splice(r,t,...e),this.arr=n,this}xpop(){return this.arr.pop(),this}xpush(...r){return this.arr.push(...r),this}xshift(){return this.arr.shift(),this}xunshift(...r){return this.arr.unshift(...r),this}shuffle(){let r=this.arr.length-1,t,e;for(e=r;e>0;e--)t=Math.floor(Math.random()*(e+1)),x(this.arr[e],this.arr[t]);return this}take(r,t=0){return u(this,l,c).call(this,"slice",t,t+r)}max(...r){return I(this.arr,"max",r)}min(...r){return I(this.arr,"min",r)}maxOf(r){return k(this.arr,r,"max")}minOf(r){return k(this.arr,r,"min")}maxBy(r){return P(this.arr,r,"max")}minBy(r){return P(this.arr,r,"min")}sum(){return this.arr.reduce((r,t)=>r+t,0)}sumOf(r){return L(this.arr,r,"+")}mean(){return this.arr.reduce((r,t)=>r+t,0)/this.arr.length}meanOf(r){return this.sumOf(r)/this.arr.length}product(){return this.arr.reduce((r,t)=>r*t,1)}productOf(r){return L(this.arr,r,"*")}union(...r){return this.arr=[...new Set([...this.arr,...r.flat(1/0)])],this}intersection(...r){[this.arr,...r].reduce((t,e)=>{let n=new Set(e);return this.arr=t.filter(i=>n.has(i)),this})}difference(r){let t=new Set(r);return this.arr=this.arr.filter(e=>!t.has(e)),this}symmetricDifference(r){let t=new Set(this.arr),e=new Set(r),n=[...t].filter(h=>!e.has(h)),i=[...e].filter(h=>!t.has(h));return this.arr=n.concat(i),this}unique(){return this.arr=[...new Set(this.arr)],this}uniqueBy(r){let t=[];if(typeof r=="function"&&(t=this.arr.map(r)),typeof r=="string"){let a=r.split(".");t=this.arr.map(f=>a.reduce((d,O)=>d[O],f))}typeof r!="function"&&typeof r!="string"&&N();let e=t.slice().sort(),n=[];for(let a=0;a<e.length-1;a++)e[a+1]==e[a]&&n.push(e[a]);let i=new Set(n),h=t.map((a,f)=>i.has(a)?void 0:f),o=new Set(h);return o.delete(void 0),this.arr=[...o].map(a=>this.arr[a]),this}deepCopy(){return this.arr=this.clonedeep(this.arr),this}types(){return this.arr=[...new Set(this.arr.map(r=>typeof r))],this}isSingle(){return this.arr.length===1}dotProduct(r){let t=this.arr;if(t.length!==r.length)throw new Error("arrays must be of the same length to produce dot product.");let e=0;for(let n=0;n<t.length;n++)e+=t[n]*r[n];return e}crossProduct(r){let t=this.arr;if(t.length!==r.length)throw new Error("arrays must be of the same length to produce cross product.");if(t.length<=1)return 0;if(t.length===2)return[t[0]*r[1]-t[1]*r[0]];if(t.length===3)return[t[1]*r[2]-t[2]*r[1],t[2]*r[0]-t[0]*r[2],t[0]*r[1]-t[1]*r[0]];throw new Error("minimum allowed array length is 3.")}range(r,t){return r!==void 0&&t===void 0?(this.arr=Array(r+1).fill().map((e,n)=>n),this):(this.arr=Array(t-r+1).fill().map((e,n)=>r+n),this)}readOnly(){return this.arr=C(this.arr),this.arr}swapByIndexes(r,t){return x(this.arr[r],this.arr[t]),this}swapByValues(r,t){let e=this.arr,n=r,i=t;(!w(r)||!w(t))&&(e=this.arr.map(a=>this.serialize(a)),n=this.serialize(n),i=this.serialize(i));let h=e.findIndex(a=>a===n),o=e.findIndex(a=>a===i);if(!(h>-1&&o>-1))throw new Error("value is not present in the array.");return x(this.arr[h],this.arr[o]),this}deleteByIndexes(...r){let t=new Set([...r]);return this.arr=this.arr.filter((e,n)=>!t.has(n)),this}deleteByValues(...r){let t=[...r].map(n=>this.serialize(n)),e=new Set([...t]);return this.arr=this.arr.filter(n=>!e.has(this.serialize(n))),this}clearByIndexes(...r){return[...r].forEach(t=>{this.arr[t]!==void 0&&(this.arr[t]=void 0)}),this}clearByValues(...r){let t=[...r].map(n=>this.serialize(n)),e=new Set([...t]);return this.arr=this.arr.map(n=>e.has(this.serialize(n))?void 0:n),this}replaceByIndex(r,t){return this.arr.splice(r,1,t),this}replaceByIndexes(r=[],t=[]){return r.forEach(e=>{this.arr[e]=t[e]}),this}replaceByValue(r,t,e=!0){let n=this.arr.slice(),i=e?this.findAllOccurences(r):{value:[this.arr.indexOf(r)]};return i.value[0]>-1&&i.value.forEach(h=>{n[h]=t}),this.arr=n,this}replaceByValues(r=[],t=[]){if(r.length!==t.length)throw new Error("can't replace values because the arrays that you have provided are not of equal size.");return r.forEach((e,n)=>{this.replaceByValue(e,t[n])}),this}toJSONObject(r=[],t=[]){if(r.length+t.length===0)return S(D({},this.arr));if(!Array.isArray(r)||!Array.isArray(t))throw new Error("'keys' and 'values' must be arrays.");if(r.length!==t.length)throw new Error("array length of 'keys' and 'values' must be the same.");let e={},n=S(r),i=S(t);if(n.length!==i.length)throw new Error("objects' inner values must be of primitive types.");return n.forEach((h,o)=>{e[h]=i[o]}),e}reverse(){let r=this.arr.length,t=Math.floor(r/2);for(let e=0;e<t;e++)x(this.arr[e],this.arr[r-1-e]);return this}OR(r,t){return B(r,t,this.arr,"some")}AND(r,t){return B(r,t,this.arr,"every")}OR_ALL(r=!1){return!!r||this.arr.some(t=>!!t)}AND_ALL(r=!0){return!!r&&this.arr.every(t=>!!t)}OR_AND(r=!0){return this.arr.every(t=>!!t||!!r)}AND_OR(r=!0){return this.arr.some(t=>!!t&&!!r)}XOR_ALL(r=!1){return!!this.arr.map(t=>!!t).reduce((t,e)=>t^e,!1)^!!r}interpolate(r){if(this.arr.length!==3)throw new Error('left array length must be 3, representing the "starting", "middle" & "final" values respectively.');if(r.length!==3||![void 0,null,!1,"x","X","?"].includes(r[1]))throw new Error("right array length must be 3, representing the [$starting_value, undefined, $final_value].");let[t,e,n]=this.arr,[i,,h]=r;return h-(h-i)*(n-e)/(n-t)}sort({order:r="ascending",sortType:t="QuickSort",sortBy:e}={}){let n,i,h=this.arr;if(e!==void 0&&typeof e!="function")throw new Error('"sortBy" has to be a function.');e?(n=e,i=!0):n=p=>p;let o=[...new Set(h.map(p=>typeof n(p)))];if(o.length>1)throw new Error("cannot sort items of different types.");if(o[0]!=="number"&&o[0]!=="string")throw new Error("cannot sort items of complex types. sorting is only possible on numbers or strings.");let a={},f=h.slice(),d=h.map(n);d.forEach((p,Q)=>{a[p]=f[Q]}),h=F[t](d),r==="descending"&&this.reverse();let O=[];return i&&(h.map(p=>{O.push(a[p])}),h=O),this.arr=h,this}zip(...r){return u(this,l,c).call(this,"map",(t,e)=>r.reduce((n,i)=>[...n,i[e]],[t]))}unzip(){return this.arr=this.zip(this.arr).value,this}next(){return z(this,A,g(this,A)+1),this.arr[g(this,A)]}};A=new WeakMap,m=new WeakMap,l=new WeakSet,c=function(r,...t){return this.arr=this.arr[r](...t),this};var tr=(s,r)=>new U(s,r),cr=tr;export{cr as default};
//# sourceMappingURL=index.js.map
