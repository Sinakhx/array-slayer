var p=(...t)=>Math.max(...t.flat(1/0)),m=(...t)=>Math.min(...t.flat(1/0)),u=(t,n)=>{if(typeof n=="function")return Math.max(...t.map(n));if(typeof n=="string"){let o=n.split(".");if(o.length===1)return Math.max(...t.map(i=>i[o[0]]));let f=t.map(i=>o.reduce((s,e)=>s[e],i));return Math.max(...f)}throw new Error("iteratee has to be either of type 'string' or 'function'")},h=(t,n)=>{if(typeof n=="function")return Math.min(...t.map(n));if(typeof n=="string"){let o=n.split(".");if(o.length===1)return Math.min(...t.map(i=>i[o[0]]));let f=t.map(i=>o.reduce((s,e)=>s[e],i));return Math.min(...f)}throw new Error("iteratee has to be either of type 'string' or 'function'")},y=(t,n)=>{if(typeof n=="function"){let o=Math.max(...t.map(n));return t.find(f=>n(f)===o)}if(typeof n=="string"){let o=n.split(".");if(o.length===1){let s=Math.max(...t.map(e=>e[o[0]]));return t.find(e=>e[o[0]]===s)}let f=t.map(s=>o.reduce((e,r)=>e[r],s)),i=Math.max(...f);return t.find((s,e)=>f[e]===i)}throw new Error("iteratee has to be either of type 'string' or 'function'")},l=(t,n)=>{if(typeof n=="function"){let o=Math.min(...t.map(n));return t.find(f=>n(f)===o)}if(typeof n=="string"){let o=n.split(".");if(o.length===1){let s=Math.min(...t.map(e=>e[o[0]]));return t.find(e=>e[o[0]]===s)}let f=t.map(s=>o.reduce((e,r)=>e[r],s)),i=Math.min(...f);return t.find((s,e)=>f[e]===i)}throw new Error("iteratee has to be either of type 'string' or 'function'")},x=t=>t.reduce((n,o)=>n+o,0),c=(t,n)=>{let o=0;if(typeof n=="function"){for(let f of t)o+=n(f);return o}if(typeof n=="string"){let f=n.split(".");for(let i of t){let s=i[f[0]];for(let e=1;e<f.length;e++)s=s[f[e]];o+=s}return o}throw new Error("iteratee has to be either of type 'string' or 'function'")},g=t=>t.reduce((n,o)=>n+o,0)/t.length,a=(t,n)=>c(t,n)/t.length,d=t=>t.reduce((n,o)=>n*o,1),M=(t,n)=>{let o=1;if(typeof n=="function"){for(let f of t)o*=n(f);return o}if(typeof n=="string"){let f=n.split(".");for(let i of t){let s=i[f[0]];for(let e=1;e<f.length;e++)s=s[f[e]];o*=s}return o}throw new Error("iteratee has to be either of type 'string' or 'function'")};export{p as max,y as maxBy,u as maxOf,g as mean,a as meanOf,m as min,l as minBy,h as minOf,d as product,M as productOf,x as sum,c as sumOf};
//# sourceMappingURL=math.js.map
